name: publish

on:
  push:
    tags:
      - "v*"

jobs:
  build-installer:
    strategy:
      fail-fast: false
      matrix:
        job:
          - { target: x86_64-unknown-linux-gnu, exe: amd64-linux, os: ubuntu-latest}
          - { target: x86_64-apple-darwin, exe: macos, os: macos-latest}
          - { target: x86_64-pc-windows-gnu, exe: windows.exe, os: windows-latest}    
    runs-on: ${{ matrix.job.os }}
    defaults: 
      run:
        working-directory: ./micro-rdk-installer
        shell: bash
    steps:
    - name: Checkout main branch code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Set toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: 1.70.0
        override: true
        target: ${{ matrix.job.target }}
        default: true
    - name: Install x86_64 linux dependencies
      if: ${{ matrix.job.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get install libudev-dev pkg-config libssl-dev
    - name: Install MacOS dependencies
      if: ${{ matrix.job.os == 'macos-latest' }}
      run: |
        brew install coreutils
        export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    - name: Build installer binary
      run: |
        cargo build --release --target ${{ matrix.job.target }} --locked
    - name: Rename result
      if: ${{ matrix.job.os != 'windows-latest' }}
      run: |
        cp target/${{ matrix.job.target }}/release/micro-rdk-installer micro-rdk-installer-${{ matrix.job.exe }}
        ls
    - name: Rename result (Windows)
      if: ${{ matrix.job.os == 'windows-latest' }}
      run: |
        cp target/${{ matrix.job.target }}/release/micro-rdk-installer.exe micro-rdk-installer-${{ matrix.job.exe }}
        ls
    - name: Check release type
      id: check-tag
      run: |
        if echo ${{ github.event.ref }} | grep -Eq '^refs/tags/v.*rc[0-9]{1}$'; then
              echo "match=true" >> $GITHUB_OUTPUT
        else
              echo "match=false" >> $GITHUB_OUTPUT
        fi
    - name: Upload release
      uses: actions/upload-artifact@v2
      with:
        name: micro-rdk-installer-${{ matrix.job.exe }}
        path: ./micro-rdk-installer-${{ matrix.job.exe }}

  publish-release:
    needs: build-installer
    runs-on: ubuntu-latest
    steps:
    - name: Check release type
      id: check-tag
      run: |
        if echo ${{ github.event.ref }} | grep -Eq '^refs/tags/v.*rc[0-9]{1}$'; then
              echo "match=true" >> $GITHUB_OUTPUT
        else
              echo "match=false" >> $GITHUB_OUTPUT
        fi
    - name: Download amd64-linux installer
      uses: actions/download-artifact@v3
      with:
        name: micro-rdk-installer-amd64-linux
    - name: Download macos installer
      uses: actions/download-artifact@v3
      with:
        name: micro-rdk-installer-macos
    - name: Download windows installer
      uses: actions/download-artifact@v3
      with:
        name: micro-rdk-installer-windows.exe
    - name: Compute checksums
      run: |
        sha256sum  micro-rdk-installer-amd64-linux  >> sha256sums.txt
        sha256sum  micro-rdk-installer-macos  >> sha256sums.txt
        sha256sum  micro-rdk-installer-windows.exe  >> sha256sums.txt
    - name: Publish release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          micro-rdk-installer-amd64-linux
          micro-rdk-installer-macos
          micro-rdk-installer-windows.exe
          sha256sums.txt
        prerelease: ${{ steps.check-tag.outputs.match }}